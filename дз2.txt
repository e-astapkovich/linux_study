1. 

ЗАДАНИЕ:

В конфигурации виртуальной машины включить "общий буфер". Для тех у кого macOS - заменить сетевой интерфейс с NAT на Bridged . Для тех у кого Windows - добавить еще один network интерфейс - internal.

РЕШЕНИЕ:

Настроил.



////////////////////////////////////////////////

2. 

ЗАДАНИЕ:

Настроить ssh соединение с хостовой ОС на гостевую ОС с использованием ssh ключа. Написать все сопутствующие команды.

РЕШЕНИЕ:

В гостевой Ubuntu:
$ sudo systemctl status sshd		// проверка, установлен ли ssh-сервер
Unit sshd.service could not be found.	// ssh-сервер не установлен
$ sudo apt-get update			// перед установкой обновляем кэши пакетного менеджера
$ sudo apt-get install openssh-server	// команда установки openssh-server
$ sudo systemctl status sshd		// проверка, установлен ли ssh-сервер
Active: active (running)...		// служба ssh-сервера запущена
$ ip a					// узнать ip-адрес гостевой системы

Хостовая система - Windows 7.
Для ssh-подключения к гостевой Ubintu использовал два варианта:
- GIT Bash (входил в комплект "Git for Windows", который устанавливал на курсе "Введение в GIT")
- PuTTY

Оба варианта работают.

Последовательность шагов:

- Сначала на хостовой ОС в GIT bash сгенерировал пару ключей:
$ ssh-keygen

- Скопировал id_rsa.pub из хостовой Windows в гостевую Ubuntu (на рабочий стол, в графическом интерфейсе)
- в Ubuntu добавил закрытый ключ в файл authorized_keys:
$ cat ~/Desktop/id_rsa.pub >> ~/.ssh/authorized_keys

- Подключение работает!
$ ssh eastapkovich@192.168.56.101


P.S.
Экспериментировал с настройками сетевых адаптеров Ubuntu
Работает в двух вариантах:
- включен один сетевой адаптер в режиме Bridged.
- включено два сетевых адаптера - один NAT, другой Host-only
Судя по чату группы, у других студентов работало при других настройках. Возможно это зависит от версии или сборки Windows.
Теперь знаю, что если соединение с виртуальной машиной не работает, и хостовая ОС - Windows, то надо перебирать разные варианты



////////////////////////////////////////////////

3. 

ЗАДАНИЕ:

Создать репозиторий в GitHub, настроить аутентификацию по ssh ключу. Локально создать отдельную ветку, добавить файл со всеми командами предыдущего и данного пункта и отправить изменения на сервер. Создать на сервере Pull Request и указать в домашнем задании ссылку на этот Pull Request.

РЕШЕНИЕ:

- В настройках Github добавил публичный ssh-ключ, который был сгенерирован в предыдущем задании.
- Создал репозиторий: https://github.com/e-astapkovich/linux_study
- Инициализировал GIT-проект на локальной машине:

$ echo "# linux_study" >> README.md
$ git init
$ git add README.md
$ git commit -m "first commit"

- Подключил локальный репозиторий к удаленному:

$ git remote add origin git@github.com:e-astapkovich/linux_study.git
$ git push -u origin master

- Создал ветку и отправил изменения на сервер:

$ git checkout -b homework-2
$ git add . 			//добавил файл с домашним заданием
$ git commit -m "add homework"
$ git push origin homework-2





